(define (domain barman)
  (:requirements :strips :typing)
  (:types hand level beverage dispenser container - object
  	  ingredient cocktail - beverage
          shot shaker - container)
  (:predicates  (ontable ?c - container)
                (holding ?h - hand ?c - container)
		(handempty ?h - hand)
		(empty ?c - container)
                (contains ?c - container ?b - beverage)
		(clean ?c - container)
                (used ?c - container ?b - beverage)
                (dispenses ?d - dispenser ?i - ingredient)
		(shaker_empty_level ?s - shaker ?l - level)
		(shaker_level ?s - shaker ?l - level)
		(next ?l1 ?l2 - level)
		(unshaked ?s - shaker)
		(shaked ?s - shaker)
                (cocktail_part1 ?c - cocktail ?i - ingredient)
                (cocktail_part2 ?c - cocktail ?i - ingredient)
;DCK states
                (DCK_start)
                (DCK_oneIngredient ?s - shot ?i - ingredient)
                (DCK_oneIngredient-fin ?s - shot)
                (DCK_cocktail ?s - shot ?c - cocktail ?shak - shaker)
                (DCK_part1 ?s - shot ?c - cocktail ?shak - shaker ?i1 - ingredient)
                (DCK_part1-filled ?s  - shot ?c - cocktail ?shak - shaker ?i1 - ingredient)
                (DCK_part1-fin ?s - shot ?c - cocktail ?shak - shaker)
                (DCK_part1-fin-swap ?s - shot ?c - cocktail ?shak - shaker)
                (DCK_part2 ?s - shot ?c - cocktail ?shak - shaker ?i2 - ingredient)
                (DCK_part2-filled ?s - shot ?c - cocktail ?shak - shaker ?i2 - ingredient)
                (DCK_part2-fin ?s - shot ?c - cocktail ?shak - shaker)
                (DCK_part2-fin-free ?s - shot ?c - cocktail ?shak - shaker)  
                (DCK_before-shake ?s - shot ?c - cocktail ?shak - shaker)  
                (DCK_shaked ?s - shot ?c - cocktail ?shak - shaker)              
                (DCK_cocktail-fin ?shak - shaker)  
                (DCK_empty-shaker ?shak - shaker) 
                (DCK_clean-shaker ?shak - shaker) 
;DCK memory
                (g_contains ?s - shot ?b - beverage)
                (mUnused ?s - shot)
)

  (:action _DCK-cocktail
             :parameters (?s - shot ?c - cocktail ?shak - shaker)
             :precondition (and (g_contains ?s ?c)
                                (mUnused ?s)
                                (clean ?shak)
                                (DCK_start))
             :effect (and (not (DCK_start))
                          (DCK_cocktail ?s ?c ?shak)))

  (:action _DCK-part1-to-part2
             :parameters (?s - shot ?h - hand ?c - cocktail ?shak - shaker ?i - ingredient)
             :precondition (and (cocktail_part2 ?c ?i)
                                (holding ?h ?s)
                                (DCK_part1-fin ?s ?c ?shak))
             :effect (and (not (DCK_part1-fin ?s ?c ?shak))
                          (DCK_part2 ?s ?c ?shak ?i)))

  (:action _DCK-oneIngredient
             :parameters (?s - shot ?i - ingredient)
             :precondition (and (contains ?s ?i)
                                (DCK_oneIngredient ?s ?i))
             :effect (and (not (g_contains ?s ?i))
                          (not (mUnused ?s))
                          (not (DCK_oneIngredient ?s ?i))
                          (DCK_oneIngredient-fin ?s)))

  (:action _DCK-part1
             :parameters (?s - shot ?h - hand?i - ingredient ?c - cocktail ?shak - shaker)
             :precondition (and (contains ?s ?i)
                                (holding ?h ?s)
                                (DCK_part1 ?s ?c ?shak ?i))
             :effect (and (not (DCK_part1 ?s ?c ?shak ?i))
                          (DCK_part1-filled ?s ?c ?shak ?i)))

  (:action _DCK-part2
             :parameters (?s - shot ?h - hand ?i - ingredient ?c - cocktail ?shak - shaker)
             :precondition (and (contains ?s ?i)
                                (holding ?h ?s)
                                (DCK_part2 ?s ?c ?shak ?i))
             :effect (and (not (DCK_part2 ?s ?c ?shak ?i))
                          (DCK_part2-filled ?s ?c ?shak ?i)))
		



  (:action grasp_DCK-oneIngredient
             :parameters (?h - hand ?c - shot   ?i - ingredient)
             :precondition (and (ontable ?c) 
                                (handempty ?h)
                                (g_contains ?c ?i)
                                (mUnused ?c)
                                (DCK_start))
             :effect (and (not (ontable ?c))
	     	     	  (not (handempty ?h))
			  (holding ?h ?c)
                          (not (DCK_start))
                          (DCK_oneIngredient ?c ?i)))

  (:action grasp_DCK-part1
             :parameters (?h - hand ?c - shot  ?s - shot ?ck - cocktail ?i - ingredient ?shak - shaker)
             :precondition (and (ontable ?c) 
                                (handempty ?h)
                                (cocktail_part1 ?ck ?i)
                                (mUnused ?c)
                                (DCK_cocktail ?s ?ck ?shak))
             :effect (and (not (ontable ?c))
	     	     	  (not (handempty ?h))
			  (holding ?h ?c)
                          (not (DCK_cocktail ?s ?ck ?shak))
                          (DCK_part1 ?s ?ck ?shak ?i)))

  (:action grasp_DCK-part2-1
             :parameters (?h - hand ?c - shot  ?s - shot ?ck - cocktail ?i - ingredient ?shak - shaker)
             :precondition (and (ontable ?c) 
                                (handempty ?h)
                                (cocktail_part2 ?ck ?i)
                                (mUnused ?c)
                                (clean ?s)
                                (DCK_part1-fin-swap ?s ?ck ?shak))
             :effect (and (not (ontable ?c))
	     	     	  (not (handempty ?h))
			  (holding ?h ?c)
                          (not (DCK_part1-fin-swap ?s ?ck ?shak))
                          (DCK_part2 ?s ?ck ?shak ?i)))

  (:action grasp_DCK-part2-2
             :parameters (?h - hand ?c - shot  ?s - shot ?ck - cocktail ?i - ingredient ?shak - shaker)
             :precondition (and (ontable ?c) 
                                (handempty ?h)
                                (cocktail_part2 ?ck ?i)
                                (= ?s ?c)
                                (DCK_part1-fin-swap ?s ?ck ?shak))
             :effect (and (not (ontable ?c))
	     	     	  (not (handempty ?h))
			  (holding ?h ?c)
                          (not (DCK_part1-fin-swap ?s ?ck ?shak))
                          (DCK_part2 ?s ?ck ?shak ?i)))


  (:action grasp_DCK-non-empty
             :parameters (?h - hand ?c - shaker  ?b - beverage)
             :precondition (and (ontable ?c) 
                                (handempty ?h)
                                (contains ?c ?b)
                                (DCK_start))
             :effect (and (not (ontable ?c))
	     	     	  (not (handempty ?h))
			  (holding ?h ?c)
                          (not (DCK_start))
                          (DCK_cocktail-fin ?c)))


  (:action grasp_DCK-used
             :parameters (?h - hand ?c - shaker)
             :precondition (and (ontable ?c) 
                                (handempty ?h)
                                (empty ?c)
                                (not (clean ?c))
                                (DCK_start))
             :effect (and (not (ontable ?c))
	     	     	  (not (handempty ?h))
			  (holding ?h ?c)
                          (not (DCK_start))
                          (DCK_empty-shaker ?c)))

  (:action grasp_before-shake
             :parameters (?h - hand ?c - shaker  ?s - shot ?ck - cocktail)
             :precondition (and (ontable ?c) 
                                (handempty ?h)
                                (DCK_part2-fin-free ?s ?ck ?c))
             :effect (and (not (ontable ?c))
	     	     	  (not (handempty ?h))
			  (holding ?h ?c)
                          (not (DCK_part2-fin-free ?s ?ck ?c))
                          (DCK_before-shake ?s ?ck ?c)))



  (:action leave_DCK-oneIngredient-fin
             :parameters (?h - hand ?c - shot)
             :precondition (and (holding ?h ?c)
                                (DCK_oneIngredient-fin ?c))   
             :effect (and (not (holding ?h ?c))
	     	     	  (handempty ?h)
			  (ontable ?c)
                          (not (DCK_oneIngredient-fin ?c))
                          (DCK_start)))

 (:action leave_DCK-part1-fin
             :parameters (?h - hand ?c - shot  ?s2 - shot ?ck - cocktail ?shak - shaker)
             :precondition (and (holding ?h ?c)
                                (not (= ?s2 ?c))
                                (DCK_part1-fin ?s2 ?ck ?shak))   
             :effect (and (not (holding ?h ?c))
	     	     	  (handempty ?h)
			  (ontable ?c)
                          (not (DCK_part1-fin ?s2 ?ck ?shak))
                          (DCK_part1-fin-swap ?s2 ?ck ?shak)))

 (:action leave_DCK-part2-fin
             :parameters (?h - hand ?c - shot  ?s3 - shot ?ck - cocktail ?shak - shaker)
             :precondition (and (holding ?h ?c)
                                (clean ?s3)
                                (DCK_part2-fin ?s3 ?ck ?shak))   
             :effect (and (not (holding ?h ?c))
	     	     	  (handempty ?h)
			  (ontable ?c)
                          (not (DCK_part2-fin ?s3 ?ck ?shak))
                          (DCK_part2-fin-free ?s3 ?ck ?shak)))


  (:action leave_DCK-clean-shaker
             :parameters (?h - hand ?c - shaker)
             :precondition (and (holding ?h ?c)
                                (DCK_clean-shaker ?c))
             :effect (and (not (holding ?h ?c))
	     	     	  (handempty ?h)
			  (ontable ?c)
                          (not (DCK_clean-shaker ?c))
                          (DCK_start)))


  
  (:action fill-shot_DCK-oneIngredient
           :parameters (?s - shot ?i - ingredient ?h1 ?h2 - hand ?d - dispenser)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)
	   		      (dispenses ?d ?i)
                              (empty ?s)
			      (clean ?s)
                              (DCK_oneIngredient ?s ?i))
           :effect (and (not (empty ?s))
	   	   	(contains ?s ?i)
	   	   	(not (clean ?s))
			(used ?s ?i)
                        (not (DCK_oneIngredient ?s ?i))
                        (not (g_contains ?s ?i))
                        (not (mUnused ?s))
                        (DCK_oneIngredient-fin ?s)))

  (:action fill-shot_DCK-part1
           :parameters (?s - shot ?i - ingredient ?h1 ?h2 - hand ?d - dispenser  ?s2 - shot ?c - cocktail ?shak - shaker)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)
	   		      (dispenses ?d ?i)
                              (empty ?s)
			      (clean ?s)
                              (DCK_part1 ?s2 ?c ?shak ?i))
           :effect (and (not (empty ?s))
	   	   	(contains ?s ?i)
	   	   	(not (clean ?s))
			(used ?s ?i)
                        (not (DCK_part1 ?s2 ?c ?shak ?i))
                        (DCK_part1-filled ?s2 ?c ?shak ?i)))

  (:action fill-shot_DCK-part2
           :parameters (?s - shot ?i - ingredient ?h1 ?h2 - hand ?d - dispenser  ?s3 - shot ?c - cocktail ?shak - shaker)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)
	   		      (dispenses ?d ?i)
                              (empty ?s)
			      (clean ?s)
                              (DCK_part2 ?s3 ?c ?shak ?i))
           :effect (and (not (empty ?s))
	   	   	(contains ?s ?i)
	   	   	(not (clean ?s))
			(used ?s ?i)
                        (not (DCK_part2 ?s3 ?c ?shak ?i))
                        (DCK_part2-filled ?s3 ?c ?shak ?i)))





  (:action refill-shot_DCK-oneIngredient
           :parameters (?s - shot ?i - ingredient ?h1 ?h2 - hand ?d - dispenser)
           :precondition (and (holding ?h1 ?s)	   		      
                              (handempty ?h2)
	   		      (dispenses ?d ?i)
                              (empty ?s)
			      (used ?s ?i)
                              (DCK_oneIngredient ?s ?i))
           :effect (and (not (empty ?s))
                        (contains ?s ?i)
                        (not (DCK_oneIngredient ?s ?i))
                        (not (g_contains ?s ?i))
                        (not (mUnused ?s))
                        (DCK_oneIngredient-fin ?s)))


  (:action refill-shot_DCK-part1
           :parameters (?s - shot ?i - ingredient ?h1 ?h2 - hand ?d - dispenser ?s2 - shot ?c - cocktail ?shak - shaker)
           :precondition (and (holding ?h1 ?s)	   		      
                              (handempty ?h2)
	   		      (dispenses ?d ?i)
                              (empty ?s)
			      (used ?s ?i)
                              (DCK_part1 ?s2 ?c ?shak ?i))
           :effect (and (not (empty ?s))
                        (contains ?s ?i)
                        (not (DCK_part1 ?s2 ?c ?shak ?i))
                        (DCK_part1-filled ?s2 ?c ?shak ?i)))


  (:action refill-shot_DCK-part2
           :parameters (?s - shot ?i - ingredient ?h1 ?h2 - hand ?d - dispenser ?s3 - shot ?c - cocktail ?shak - shaker)
           :precondition (and (holding ?h1 ?s)	   		      
                              (handempty ?h2)
	   		      (dispenses ?d ?i)
                              (empty ?s)
			      (used ?s ?i)
                              (DCK_part2 ?s3 ?c ?shak ?i))
           :effect (and (not (empty ?s))
                        (contains ?s ?i)
                        (not (DCK_part2 ?s3 ?c ?shak ?i))
                        (DCK_part2-filled ?s3 ?c ?shak ?i)))


  (:action empty-shot_DCK-oneIngredient
           :parameters (?h - hand ?p - shot ?b - beverage ?i - ingredient)
           :precondition (and (holding ?h ?p)
                              (contains ?p ?b)
                              (DCK_oneIngredient ?p ?i)
                              (not (= ?b ?i)))
           :effect (and (not (contains ?p ?b))
	   	   	(empty ?p)))

  (:action empty-shot_DCK-part1
           :parameters (?h - hand ?p - shot ?b - beverage ?s2 - shot ?c - cocktail ?shak - shaker ?i - ingredient)
           :precondition (and (holding ?h ?p)
                              (contains ?p ?b)
                              (DCK_part1 ?s2 ?c ?shak ?i)
                              (not (= ?b ?i)))
           :effect (and (not (contains ?p ?b))
	   	   	(empty ?p)))

  (:action empty-shot_DCK-part2
           :parameters (?h - hand ?p - shot ?b - beverage ?s3 - shot ?c - cocktail ?shak - shaker ?i - ingredient)
           :precondition (and (holding ?h ?p)
                              (contains ?p ?b)
                              (DCK_part2 ?s3 ?c ?shak ?i)
                              (not (= ?b ?i)))
           :effect (and (not (contains ?p ?b))
	   	   	(empty ?p)))




  (:action clean-shot_DCK-oneIngredient
  	   :parameters (?s - shot ?b - beverage ?h1 ?h2 - hand ?i - ingredient)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)	   		      
			      (empty ?s)
                              (used ?s ?b)
                              (DCK_oneIngredient ?s ?i)
                              (not (= ?b ?i)))
           :effect (and (not (used ?s ?b))
	   	   	(clean ?s)))

  (:action clean-shot_DCK-part1
  	   :parameters (?s - shot ?b - beverage ?h1 ?h2 - hand ?s2 - shot ?c - cocktail ?shak - shaker ?i - ingredient)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)	   		      
			      (empty ?s)
                              (used ?s ?b)
                              (DCK_part1 ?s2 ?c ?shak ?i)
                              (not (= ?b ?i)))
           :effect (and (not (used ?s ?b))
	   	   	(clean ?s)))

  (:action clean-shot_DCK-part2
  	   :parameters (?s - shot ?b - beverage ?h1 ?h2 - hand ?s3 - shot ?c - cocktail ?shak - shaker ?i - ingredient)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)	   		      
			      (empty ?s)
                              (used ?s ?b)
                              (DCK_part2 ?s3 ?c ?shak ?i)
                              (not (= ?b ?i)))
           :effect (and (not (used ?s ?b))
	   	   	(clean ?s)))

  (:action clean-shot_DCK-part2-fin
  	   :parameters (?s - shot ?b - beverage ?h1 ?h2 - hand ?s3 - shot ?c - cocktail ?shak - shaker)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)	   		      
			      (empty ?s)
                              (used ?s ?b)
                              (DCK_part2-fin ?s3 ?c ?shak)
                              (= ?s ?s3))
           :effect (and (not (used ?s ?b))
	   	   	(clean ?s)))




  (:action pour-shot-to-clean-shaker_DCK
           :parameters (?s - shot ?i - ingredient ?d - shaker ?h1 - hand ?l ?l1 - level  ?s2 - shot ?c - cocktail)
           :precondition (and (holding ?h1 ?s)
			      (contains ?s ?i)
                              (empty ?d)
	   		      (clean ?d)                              
                              (shaker_level ?d ?l)
                              (next ?l ?l1)
                              (DCK_part1-filled ?s2 ?c ?d ?i))
           :effect (and (not (contains ?s ?i))
	   	   	(empty ?s)
			(contains ?d ?i)
                        (not (empty ?d))
			(not (clean ?d))
			(unshaked ?d)
			(not (shaker_level ?d ?l))
			(shaker_level ?d ?l1)
                        (not (DCK_part1-filled ?s2 ?c ?d ?i))
                        (DCK_part1-fin ?s2 ?c ?d)))


  (:action pour-shot-to-used-shaker_DCK
           :parameters (?s - shot ?i - ingredient ?d - shaker ?h1 - hand ?l ?l1 - level  ?s3 - shot ?c - cocktail)
           :precondition (and (holding ?h1 ?s)
			      (contains ?s ?i)
                              (unshaked ?d)
                              (shaker_level ?d ?l)
                              (next ?l ?l1)
                              (DCK_part2-filled ?s3 ?c ?d ?i))
           :effect (and (not (contains ?s ?i))
                        (contains ?d ?i)
	   	   	(empty ?s)     
  			(not (shaker_level ?d ?l))
			(shaker_level ?d ?l1)
                        (not (DCK_part2-filled ?s3 ?c ?d ?i))
                        (DCK_part2-fin ?s3 ?c ?d)))

  (:action empty-shaker_DCK
           :parameters (?h - hand ?s - shaker ?b - cocktail ?l ?l1 - level)
           :precondition (and (holding ?h ?s)
                              (contains ?s ?b)
			      (shaked ?s)
			      (shaker_level ?s ?l)
			      (shaker_empty_level ?s ?l1)
                              (DCK_cocktail-fin ?s))
           :effect (and (not (shaked ?s))
	   	   	(not (shaker_level ?s ?l))
	   	   	(shaker_level ?s ?l1)
			(not (contains ?s ?b))
	   	   	(empty ?s)
                        (not (DCK_cocktail-fin ?s))
                        (DCK_empty-shaker ?s)))

  (:action clean-shaker_DCK
  	   :parameters (?h1 ?h2 - hand ?s - shaker)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)
                              (empty ?s)
                              (DCK_empty-shaker ?s))
           :effect (and (clean ?s)
                        (not (DCK_empty-shaker ?s))
                        (DCK_clean-shaker ?s)))
  
  (:action shake_DCK
  	   :parameters (?b - cocktail ?d1 ?d2 - ingredient ?s - shaker ?h1 ?h2 - hand  ?shot - shot)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)
			      (contains ?s ?d1)
                              (contains ?s ?d2)
                              (cocktail_part1 ?b ?d1)
			      (cocktail_part2 ?b ?d2)
			      (unshaked ?s)
                              (DCK_before-shake ?shot ?b ?s))			      
           :effect (and (not (unshaked ?s))
		        (not (contains ?s ?d1))
                        (not (contains ?s ?d2))
	   	   	(shaked ?s)
                        (contains ?s ?b)
                        (not (DCK_before-shake ?shot ?b ?s))
                        (DCK_shaked ?shot ?b ?s)))

  (:action pour-shaker-to-shot_DCK
           :parameters (?b - cocktail ?d - shot ?h - hand ?s - shaker ?l ?l1 - level)
           :precondition (and (holding ?h ?s)
			      (shaked ?s)
			      (empty ?d)
			      (clean ?d)
			      (contains ?s ?b)
                              (shaker_level ?s ?l)
                              (next ?l1 ?l)
                              (DCK_shaked ?d ?b ?s))
           :effect (and (not (clean ?d))
	   	   	(not (empty ?d))
			(contains ?d ?b)
			(shaker_level ?s ?l1)
			(not (shaker_level ?s ?l))
                        (not (g_contains ?d ?b))
                        (not (mUnused ?d))
                        (not (DCK_shaked ?d ?b ?s))
                        (DCK_cocktail-fin ?s)))
 )
